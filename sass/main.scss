@import './mixins';
@import './colors';
@import './components';
*,
*::after,
*::before {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

html {
	font-size: 62.5%;
	scroll-behavior: smooth;
}
body {
	// min-height: 100vh;
	font-family: 'Dancing Script', cursive;
	font-family: 'Open Sans', sans-serif;
	// overflow: hidden;/*body nie może mieć oveflow:hidden, bo nie będzie możlwe przewijanie*/
	color: #fff;
	background: $light-white;
	font-size: 1.6rem;
}
// navigation
.burger-btn {
	position: fixed;
	top: 20px;
	right: 20px;
	padding: 1em;
	background-color: rgb(178, 178, 186);
	border: 1px solid transparent;
	border-radius: 8px;
	cursor: pointer;
	z-index: 190;
	&:focus {
		/*focus stosujemy przy poruszaniu się tabulacją*/
		outline: none;
		border: 1px solid rgba(255, 255, 255, 0.5);
		border-radius: 8px;
	}
	&:hover {
		.burger-btn__bars::after,
		.burger-btn__bars::before {
			width: 100%;
		}
	}
	&__box {
		position: relative;
		width: 40px;
		height: 30px;
	}
	&__bars,
	&__bars::before,
	&__bars::after {
		@include burgerBtn;
	}
	&__bars {
		width: 100%;
		&::after {
			top: 13px;
			width: 60%;
			transition-delay: 0.15s;
		}
		&::before {
			top: 27px;
			width: 30%;
			transition-delay: 0.1s;
		}
	}
}
.nav {
	position: fixed;
	top: 0%;
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100vh;
	width: 100vw;
	transform: translateX(100%);
	transition: 0.5s cubic-bezier(0.65, 0.05, 0.036, 1);
	background-image: $blue-gradient-solid;
	z-index: 100;
	&--active {
		transform: translateX(0);
	}
	&__item {
		position: relative;
		display: block;
		margin: 0.5em 0;
		padding: 0.5em 2em;
		font-size: 2.8rem;
		color: $pure-white;
		text-decoration: none;
		// background-color: red;
		&::before {
			/*to te paseczki z boku, które się pojawiają*/
			position: absolute;
			bottom: 0;
			right: 0;
			width: 100%;
			height: 2%;
			transform: scaleX(0);
			background-color: $pure-white;
			transition: transform 0.3s;
			transform-origin: bottom;
			content: '';
		}
		&:hover::before {
			transform: scaleX(1);
		}
	}
}
@keyframes navItemsAnimation {
	from {
		transform: translateX(-200%);
	}
	to {
		transform: translateX(0);
	}
}
.nav-items-animation {
	animation: navItemsAnimation 1.8s both;
}
.black-bars-color,
.black-bars-color::after,
.black-bars-color::before {
	/*wprowadzamy tę klasę, żeby burger menu zmieniło się na czarny kolor w chwili, gdy tło jest białe*/
	background-color: $dark;
}
// header
.header {
	position: relative;
	display: flex; /*flez ma wpływ na elementy w dzieciach*/
	justify-content: center;
	align-items: center;
	flex-direction: column;
	padding: 2em;
	height: 75vh;
	text-align: center;
	color: $pure-white;
	@include heroImages(
		'../img/small_palms.jpg'
	); /*pokazujemy co to za zmienna, używamy cudzysłowia*/
	background-attachment: scroll; /*przyczepia obraz z backround-image do tła headera*/
	&__heading {
		font-family: 'Dancing Script', cursive;
		font-size: 4.8rem;
		font-weight: 300;
	}
	&__text {
		font-size: 1.4rem;
	}
	&__btn {
		margin-top: 2em;
		padding: 0.8em 1.6em;
		background-color: $pure-white;
		border: none;
		border-radius: 8px;
		color: $dark;
		text-decoration: none; /*znika podkreślenie typowe dla tagu*/
		text-transform: uppercase;
		font-size: 1.4rem;
		font-weight: bold;
		cursor: pointer;
		&::after {
			background-color: $light-white;
		}
	}
}
//main
//dreams section
.dreams {
	&__box {
		display: flex;
		flex-direction: column; /*ale to później zostaje zmienione na row w mediach*/
		// margin: 2em 0;
		// background-color: red;
	}
	&__img {
		width: 100%;
		height: 100%;
		margin-bottom: 1em;
	}
	&__title {
		margin-bottom: 1em;
	}
	&__text {
		font-size: 1.4rem;
	}
}
// hero image section
.hero-img {
	position: relative;
	background-color: burlywood;
	padding: 10em 2em;
	@include heroImages('../img/polynesia_small.jpg');
	overflow: hidden;
	text-align: center;
	&__title {
		margin-bottom: 0.5em;
		font-family: 'Dancing Script', cursive;
		font-size: 4.8rem;
	}
	&__text {
		padding: 1em 0;
	}
}
//islands
.islands {
	&__card {
		position: relative;
		margin: 1em 0;
		height: 450px; /*width czyta sobie z rodzica, a ten z z .wrapper*/
		color: $pure-white;
		// border: 2px solid black;
		text-align: center;
		perspective: 1000px; /*żeby osiągnąć efekt motyla*/
		background-color: yellow;
		&:hover {
			/*zwróć uwagę na sytuację, gdy hover odziałuje na więcej niż 2 klasy, wtedy należy nie wpisywać po spacji nazwy klasy, tylko otworzyć nawias i wpisać tu wszystkie klasy, na które odziałuje hover*/
			/*Robienie flipa poniżej:*/
			.islands__card-img1 {
				transform: rotateY(-180deg);
				opacity: 0;
			}
			.islands__card-info1 {
				transform: rotateY(0deg);
				opacity: 1;
			}
			.islands__card-img2 {
				transform: rotateY(-180deg);
				opacity: 0;
			}
			.islands__card-info2 {
				transform: rotateY(0);
				opacity: 1;
			}
			.islands__card-img3 {
				transform: rotateY(-180deg);
				opacity: 0;
			}
			.islands__card-info3 {
				transform: rotateY(0);
				opacity: 1;
			}
		}

		&-img {
			padding: 2em;
			height: 100%;
			border-radius: 8px;
			background-size: cover;
			transition: transform 1s, opacity 1s;
			&--first {
				background-image: $light-blue-gradient, url('../img/islands1.jpg');
				background-size: cover;
				background-attachment: fixed;
			}
			&--second {
				background-image: $blue-gradient, url('../img/islands2.jpg');
				background-attachment: fixed;
			}
			&--third {
				background-image: $purple-gradient, url('../img/islands3.jpg');
				background-attachment: fixed;
			}
			&-title {
				font-family: 'Dancing Script', cursive;
				font-size: 2.8rem;
			}
			&-info {
				/* nie myl z klasą islands__card-info*/
				position: absolute;
				bottom: 30px;
				right: 30px;
				font-size: 1.8rem;
				.fas.fa-angle-double-right {
					margin-right: 0.3em;
				}
			}
		}
		&-info {
			position: absolute; /* nadanie top:0, bottom:0, right:0, left:0 rozciąga treść z &-info na całego rodzica, czyli  na islands__card, stąd &-info czyta sobie swoje wymiary*/
			top: 0;
			bottom: 0;
			left: 0;
			right: 0;
			background-image: $light-blue-gradient-solid;
			display: flex;
			flex-direction: column;
			justify-content: center;
			border-radius: 8px;
			opacity: 0;
			transform: rotateY(180deg);
			transition: transform 1s, opacity 1s;

			&-title {
				// position: absolute; /*rodzic też ma position absolute, ale to nie przeszkadza*/
				// left: 50%;
				// transform: translateX(-50%);
				@include islandCardStyles;
				top: 1.2em;
				font-family: 'Dancing Script', cursive;
				font-size: 2.8rem;
			}
			&-list {
				margin: 0 auto;
				width: 70%;
				list-style: none;
				// background-color: aquamarine;
				&-item {
					padding: 1em;
					font-size: 1.4rem;
					border-bottom: 1px solid $light-white;
					&:nth-child(5) {
						border-bottom: none;
					}
				}
			}
			&-btn {
				@include islandCardStyles;
				bottom: 2em;
				padding: 1em;
				border-radius: 8px;
				width: 40%;
				border: 1px solid black;
				background-color: $green-color;
				cursor: pointer;
				font-size: 1.8rem;
				&::before {
					background-color: $green-color-hover; /* dodajesz sobie background-color do before, który był opisany w _components przy klasie btn-special-animation*/
				}
			}
		}
	}
}
//offers
.offers {
	position: relative;
	@include heroImages('../img/offer4_small.jpg');
	overflow: hidden;
	.offers__section-heading {
		color: $pure-white;
	}
	&__option {
		margin: 1em 0;
		width: 100%;
		background-color: $pure-white;
		box-shadow: 5px 5px 10px rgba(46, 46, 46, 0.18);
		overflow: hidden; /*żeby zdjęcie nie wyciekało przy powiększeniu*/
		&-img {
			width: 100%;
			height: 50%;
			transition: transform 0.3s;
			&:hover {
				transform: scale(1.1);
			}
		}
		&-info {
			padding: 2em;
			color: black;
			background-color: $pure-white; /* nadanie tła i dużego Z-index powoduje, że zdjęcie, kiedy się powiększa, nie wchodzi na nasz tekst*/
			z-index: 10;
		}
		&-heading {
			margin-bottom: 0.5em;
			font-size: 2.4rem;
			font-weight: 300;
		}
		&-text {
			margin-bottom: 0.5em;
			font-size: 1.3rem;
			color: $dark;
		}
		&-btn {
			margin-top: 1em;
			padding: 0.8em;
			width: 100%;
			font-size: 2rem;
			// height w buttonie na chwilę obecną mogę ustawiać za pomocą wielkości czcionki
			background-color: $main-color;
			border: none;
			border-radius: 8px;
			cursor: pointer;
			&:hover::before {
				background-color: $secondary-color;
			}
		}
	}
}
//reviews
@media (max-width: 767) {
	.reviews.section-padding {
		padding: 6em 0;
	}
}
.reviews {
	background-color: $light-white;
	&__box {
		position: relative;
		margin: 2em;
		padding: 2em;
		border-radius: 8px;
		box-shadow: 12px 10px 10px #2e2e2e2e;
		background-color: green;
		transition: transform 0.3s;
		&:hover {
			transform: scale(0.9);
		}
	}
	&__box-img {
		position: absolute;
		top: 8%;
		left: 75%;
		transform: translate(-50%, -50%);
		// background-color: floralwhite;
		img {
			width: 80px;
			height: 80px;
			object-fit: cover; /*zakrywa całe pole*/
			border-radius: 50%;
		}
	}
	&__box-quote {
		margin-bottom: 1em;
		font-size: 3rem;
		color: $main-color;
	}
	&__box-text {
		margin-bottom: 1em;
		font-size: 1.4rem;
		color: $dark;
		// background-color: blanchedalmond;
	}
}
//contact
.contact {
	position: relative; /*żeby było widać white-block white-block-left i right , które mają position absolute*/
	background-color: $light-white;
	overflow: hidden;
	.white-block-left {
		background-color: $dark;
	}
	&__form,
	&__form-top {
		display: flex;
		flex-direction: column;
	}
	&__form-label {
		margin-bottom: 0.5em;
		text-transform: uppercase;
	}
	&__form-input {
		@include contactForm;
	}
	&__form-textarea {
		@include contactForm;
		max-width: 100%; /*w doniesieniu do rodzica*/
		width: 100%;
		min-height: 150px;
	}
	&__form-btn {
		align-self: flex-end; /*align-self dotyczy dziecka, gdy rodzic ma flex*/
		padding: 1em;
		width: 100%;
		max-width: 300px; /*nadajemy taki układ z width:100 i max width: 300px, żeby nie doszło do sytuacji, gdzie zmniejszamy stronę np do 280px szerokości a przycisk cały czas wystaje poza nią, bo ma 300px*; inaczej rzecz ujmując, dopóki strona ma więcej niż 300px przycisk będzie miał 300px, a jeśli szerokość storny będzie mniejsza, to przycisk będzie miał szerokości tyle ile szerokość strony*/
		color: $pure-white;
		background-color: $main-color;
		border: none;
		border-radius: 8px;
		cursor: pointer;
		&::before {
			background-color: $secondary-color;
		}
	}
}
//footer
.footer {
	color: $pure-white;
	background-color: $dark;
	overflow: hidden;
	.wrapper /*odnosimy się tylko do wrapera wewnątrz klasy footer tutaj*/ {
		padding: 6em 2em 2em;
	}

	&__box {
		font-size: 1.4rem;
	}
	&__box-desktop {
		display: none;
	}
	&__box-title {
		margin-bottom: 1em;
		font-size: 3rem;
		text-transform: uppercase;
	}
	&__box-social {
		margin: 2em 0em 1em;
		background-color: greenyellow;
	}
	&__box-link {
		padding: 0em 0.3em;
		font-size: 3.6rem;
		color: $pure-white;
		text-decoration: none;
		transition: color 0.3s;
		color: $light-white;
		&:nth-child(1) {
			padding-left: 0;
		}
	}
	&__bottom-text {
		padding: 2em;
		text-align: center;
	}
}
// media
@media (min-width: 576px) {
	.dreams {
		&__box {
			flex-direction: row;
			justify-content: space-between;

			&-text {
				width: 35%;
				text-align: center;
				color: $main-color;
				&--right {
					/*uwaga na taki zapis bo w CSS to nie jest dziecko*/
					text-align: center;
					// background-color: green;
				}
			}

			&-img {
				width: 65%;

				&--right {
					order: 1;
				}
			}
		}

		&__img {
			margin-bottom: 0;
			max-height: 300px;
			// border: 4px white solid;
		}
	}
	.offers {
		&__option {
			display: flex;
			margin: 2em 0;
			background-color: yellow;
			&-img {
				width: 50%;
				height: auto; /*bardzo ważne, żeby to wpisać, dzięki tej komendzie zdjęcia dostosowują się do miejsca, które jest im dane w .offers__option, u  mnie zajmują całe miejsce, które jest dla nich zarezerwowane*/
				border-radius: 8px;
				&--right {
					order: 1; /*dzięki temu zdjęcie offer2 pojawi się po prawej stronie*/
				}
			}
			&-info {
				display: flex;
				flex-direction: column;
				justify-content: space-between;
			}
			&-heading {
				margin-bottom: 0.5em;
				font-size: 3.6rem;
			}
			&-btn {
				padding: 1em;
			}
		}
	}
}

@media (min-width: 768px) {
	.white-block {
		height: 50px;
		width: 45%;
	}
	.header {
		&__heading {
			font-size: 6.6rem;
		}
		&__text {
			font-size: 2.2rem;
		}
		&__btn {
			font-size: 1.6rem;
		}
	}
	.dreams {
		font-size: 1.8rem;
	}
	.hero-img {
		padding: 30em 2em;
		&__text {
			font-size: 2.2rem;
		}

		hr {
			margin: 0 auto; /*żeby wyśrodkować*/
			width: 70%;
		}
	}
	.islands {
		&__cards {
			display: flex; /*oddziałuje na dzieci*/
			justify-content: center;
			flex-wrap: wrap; /*to daje możliwość, że elementy będą przenosozne do kolejnej linii, jeśli zajdzie taka potrzeba - spójrz na szerokość ustaloną na &_card - tam jest narzucona 45% rodzica, więc w tym breakpoincie nie zmieszczą sie 3 obok siebie*/
			// background-color: greenyellow;
		}
		&__card {
			margin: 1em;
			width: 45%; /*musisz włączyć flex-wrap: wrap*/
		}
	}
	.footer {
		&__boxes {
			display: flex;
			justify-content: space-between;
		}
		&__box-desktop {
			display: block;
		}
		&__box {
			margin: 2em;
			width: 25%;
			&:nth-child(1) {
				width: 50%;
			}
		}
		&__box-title {
			font-size: 2.4rem;
		}
		&__box-list {
			list-style: none;
			&-item {
				margin-bottom: 1em;
				a {
					color: $light-white;
					text-decoration: none;
				}
			}
		}
	}
}
@media (min-width: 992px) {
	.burger-btn {
		right: 9%;
		top: 5%;
	}
	.header {
		@include heroImages('../img/polynesia_big.jpg');
		&__heading {
			font-size: 10rem;
		}
	}
	.dreams {
		&__box {
			margin: 5em;
			&-text {
				display: flex;
				flex-direction: column;
				justify-content: flex-end;
				margin-bottom: 2.5em;
			}
		}
		&__title {
			font-size: 3.6rem;
		}
		&__text {
			font-size: 2.2rem;
		}
	}
	.hero-img {
		padding: 40em 2em;
		background-image: $blue-gradient, url('../img/polynesia_big.jpg');

		&__title {
			font-size: 7.2rem;
		}

		hr {
			// margin: 0 auto; /*tym razem już nie powtarzamy bo było w poprzednim breakpoincie*/
			width: 60%;
			max-width: 900px;
		}
	}
	.offers {
		@include heroImages('../img/offer4_big.jpg');
		&__option {
			&-img {
				object-fit: cover; /*Styl object-fit służy do określania, w jaki sposób należy zmieniać rozmiar elementu img lub video, aby pasował do jego kontenera.*/
				height: 300px;
			}
			&-text {
				font-size: 1.5rem;
			}
		}
	}
}
@media (min-width: 1100px) {
	.islands {
		&__cards {
			flex-wrap: nowrap; /*szerokość założyliśmy na 45% w poprzednim breakpoincie, tylko należy pamiętać, że wtedy musimy też włączyć funkcję flex-wrap:wrap; kiedy wyłączamy tę funkcję komendą "nowrap" zapis width: 45% nie zadziała*/
		}
		// &__card {
		// width: 50%;
		// margin: 0 auto;
		// }
	}
}
