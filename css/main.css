@charset "UTF-8";
@keyframes pulse {
  /*zapamiętaj koniecznie ten efekt pulsowania*/
  from {
    opacity: 0.5;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(1.2);
  }
}
@keyframes rotate-right {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}
@keyframes rotate-left {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(-360deg);
  }
}
*,
*::after,
*::before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  font-family: "Raleway", sans-serif;
  font-family: "Cinzel", serif;
  background-color: #333;
  font-size: 1.6rem;
  color: #fff;
  background-color: #232323;
}

h1.company-name {
  margin-bottom: 0.5em;
  font-size: 3rem;
  font-family: "Cinzel", serif;
  color: gold;
}

.wrapper {
  margin: 0 auto;
  max-width: 1200px;
  width: 100%;
}

.section-title {
  /*z sekcji info*/
  position: relative; /*względem tego elementu będziemy pozycjonować jego dziecko, czyli ::before*/
  margin: 0 auto 2em; /*auto gwarantuje ustawienie tytułu na środku*/
  width: -moz-fit-content;
  width: fit-content; /*żeby dopasować szerokość do treści*/
  font-size: 3.2rem;
  color: gold;
  font-weight: 200;
}
.section-title::before {
  position: absolute;
  bottom: 0em;
  left: 0;
  width: 40px;
  height: 2px;
  background-color: #d6c78e;
  content: "";
}
.section-title span {
  font-weight: 900;
}

.header {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  height: 100vh;
  position: relative;
  overflow: hidden;
}
.header__text {
  display: grid; /*tutaj mamy do czynienia z sytuacją, gdy ustawiamy sobie grid na rodzicu a dzieciom nadajemy jcc oraz aic. Powoduje to, że obszar zajęty przez text zostaje podzielony na część zajmowaną przez dzieci, czyli h1 oraz p. Treść ustawia się w centrum tych dwóch obszarów. W przypadku, gdybyśmy na rodzica, czyli na &__text dali display:flex, to rodzi nie zostałby podzielony na dwa obszary a dzieci ustawiłyby się na srodku tego jednego obszaru*/
  justify-content: center; /*centrowanie jak we flexie*/
  align-items: center;
  grid-row: 2/3;
  grid-column: 1/3;
  padding: 2em;
}
.header__text p {
  font-weight: 200;
}
.header__img {
  position: relative;
  grid-row: 1/2;
  grid-column: 1/3;
  width: 100%;
  height: 100%;
  background-image: url("../img/header_small.jpg");
  background-size: cover; /*żeby zdjęcie było rozciągnięte*/
  background-position: center;
  filter: sepia();
}
.header__shadow {
  position: absolute;
  width: 100%; /*względem rodzica, czyli &__img*, tak, aby zasłaniał cały element*/
  height: 100%;
  background-color: rgba(0, 0, 0, 0.3);
}
.header__arrow {
  display: none;
}
.header__bg-icon-one, .header__bg-icon-two {
  position: absolute; /*to ważna informacja*/
  opacity: 0.05;
  z-index: -5; /*żeby ikona była pod tekstem, nie zasłaniała go*/
}
.header__bg-icon-two {
  display: none; /*żeby jej nie widać na urządzeniach mobilnych*/
}
.header__bg-icon-one {
  bottom: 0.5em;
  right: -3em;
  width: 30%;
  animation: rotate-right 55s infinite linear; /*animacja powtarzająca się w nieskończoność, linear-  czyli z jednakowa prędkością*/
}
.header .hamburger {
  position: absolute;
  top: 3em;
  left: 1em;
  transform: translateY(-50%);
  z-index: 700;
}
.header .hamburger-inner, .header .hamburger-inner::after, .header .hamburger-inner::before {
  background-color: #fff;
}
.header .nav-desktop {
  display: none;
}
.header .nav-mobile {
  position: absolute; /*top, bottom, right, left na 0, zeby rozciagnąć na cały ekran*/
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex; /*żeby wypozycjonować dzieci, tutaj, żeby zobaczyć jak wygląda cała nawigacja rozciągnięta, daj kolor tła na np. pomarańczowy i daj wysoki z-index*/
  justify-content: center;
  align-items: center;
  flex-direction: column;
  transform: translateX(-102%); /* nie 100% bo sie z boku pojawiał biały pasek*/
  transition: transform 0.3s;
  z-index: 2000;
}
.header .nav-mobile--active {
  transform: translateX(0%);
  background-color: #fff;
  z-index: 30;
}
.header .nav__link {
  position: relative;
  display: inline-block;
  margin: 0.5em;
  padding: 0.5em;
  text-decoration: none;
  font-size: 2.3rem;
  color: #191919;
  text-transform: uppercase;
  transition: color 0.3s;
  cursor: pointer;
}
.header .nav__link:hover {
  color: gold;
}

.main .cards {
  background-color: #191919;
  overflow: hidden; /*dajemy t ę wartość ze względu na animację, która będzie na befor do card - linijka 195, gdyby overlow nie bylo hidden, to przy małych rozdzielczościach ze względu na wartość transform: scale (1.2) mielibyśmy nieporządany efekt*/
}
.main .cards__box {
  display: grid;
  grid-template-columns: repeat(9, 1fr); /*liczba rzędów wynika z liczby dzieci - czyli 3*/
  gap: 2em;
  padding: 6em;
}
.main .cards__card {
  /*są trzy karty*/
  position: relative; /*wzgledniem niem będziemy pozycjonować img, h3 oraz p*/
  display: grid; /*ponieważ karta ma 3 dzieci, i nadaliśmy jej grid a nie napisaliśmy ile ma mieć row i columns, na chwilę obecną została stworzona 1 kolumna na treść i 3 wiersze na każde dziecko po jednym*/
  justify-items: center;
  padding: 3em;
  text-align: center;
  border: 1px solid transparent; /*dodajemy transparent, żeby po dodaniu hovera i w hoverze wprowadzeniu zmiany na borderze,  div z klasą cards__card nie skakały - hover będzie powodował tylko zmianę koloru hovera z transparent na złoty*/
  border-radius: 8px;
  background-color: #232323;
  transition: background-color 0.3s, border 0.3s;
  z-index: 5; /*ze względu na animację na ::before, żeby rozchodzące się linie nie dawały nieporządanego efektu*/
}
.main .cards__card:hover {
  background-color: #191919;
  border: 1px solid gold;
  z-index: 1;
}
.main .cards__card::before {
  /*jest dzieckiem &__card*/
  position: absolute;
  content: "";
  width: 100%;
  height: 100%; /*dając takie wartości, nie potrzebujemy pozycjonować za pomocą left, right*/
  border: 1px solid gold;
  border-radius: 8px;
  opacity: 0;
}
.main .cards__card:hover::before {
  animation: pulse 1s;
}
.main .cards__card img {
  margin-bottom: 1em;
  width: 60px;
}
.main .cards__card h3 {
  margin-bottom: 0.6em;
  text-transform: uppercase;
}
.main .cards__card--one {
  grid-column: 1/-1; /*jak zwykle na początku pracujemy na urządzeniach mobilnych, więc pod nie te wartości, potem na breakpointach pozmieniamy; pozycjonujemy na gridzie rodzica!!!*/
  grid-row: 1/2;
  background-color: red;
}
.main .cards__card--two {
  grid-column: 1/-1;
  grid-row: 2/3;
  background-color: blue;
}
.main .cards__card--three {
  grid-column: 1/-1;
  grid-row: 3/4;
  background-color: violet;
}

.info {
  position: relative; /*względem tego rodzica będziemy pozycjonować kwadraciki i iksy z samego dołu sekcji*/
  display: grid;
  grid-template-areas: "title" "box" "box";
  padding: 6em 2em;
}
.info__title {
  grid-area: title; /*tutaj nie ma cudzysłowu*/
}
.info__boxes {
  grid-area: box; /*tutaj nie ma cudzysłowu*/
}
.info__box-img {
  width: 100%;
  -o-object-fit: contain;
     object-fit: contain;
  filter: sepia();
}
.info__box-title {
  margin: 0.3em 0;
  font-size: 2.6rem;
  color: #d6c78e;
  font-weight: 200;
}
@media (min-width: 768px) {
  .main .cards__box {
    padding: 10em 2em;
  }
  .main .cards__card--one {
    grid-column: 1/4;
    grid-row: 1/2;
    background-color: green;
  }
  .main .cards__card--two {
    grid-column: 4/7;
    grid-row: 1/2;
    background-color: rgb(128, 85, 0);
  }
  .main .cards__card--three {
    grid-column: 7/10;
    grid-row: 1/2;
    background-color: rgb(47, 0, 128);
  }
}
@media (min-width: 992px) {
  .header {
    grid-template-rows: auto repeat(2, 1fr); /*to komenda utwórz 3 rzędy, z czego  1. rzad zajmie tyle przestrzeni, ile jego treść ten fragment jest nam potrzebny w momencie, gdy umieścimy tutaj nawigację, to jest linka 57 bieżącego pliku, bez komendy auto nawigacja by się rozlała po stronie*/
  }
  .header__text {
    grid-row: 2/4;
    grid-column: 1/2;
  }
  .header__text p {
    font-size: 1.8rem;
  }
  .header__text h1.company-name {
    font-size: 6rem;
  }
  .header__img {
    grid-row: 1/4;
    grid-column: 2/3;
  }
  .header__arrow {
    display: block;
    position: absolute;
    left: 48%;
    bottom: 3em;
    padding: 2em;
    transform: translateX(-50%);
    border: 1px solid #fff;
    border-radius: 50%;
  }
  .header__arrow::before {
    position: absolute;
    top: 0;
    left: 0;
    content: ""; /*nie zapominaj o tym*/
    width: 100%;
    height: 100%;
    border: 1px solid #fff;
    border-radius: 50%;
    animation: pulse 2s infinite;
  }
  .header__arrow-icon {
    width: 50px;
  }
  .header__bg-icon-one {
    /*uwaga: taki efekt delikatnej figury geometrycznej w tle uzyskaliśmy w main poprzez danie na ten element position absolute, opacity: 0.05, z-index na -5*/
    /*trzeba się dobrze przypatrzeć, ale w tle pojawia się taki kwadrat*/
    left: 6em;
    bottom: 8em;
    width: 20%;
    z-index: 40;
  }
  .header__bg-icon-two {
    display: block;
    top: 10em;
    bottom: 35%;
    width: 10%;
    animation: rotate-left 55s infinite linear;
  }
  .header .nav {
    grid-column: 1/2;
    grid-row: 1/2;
    padding: 1em;
    border-bottom: 1px solid rgba(255, 255, 255, 0.3); /*tworzy kreskę pod nawigacją*/
  }
  .header .nav-desktop {
    display: block;
  }
  .header .nav__link {
    color: #fff;
  }
  .header .nav__link::before {
    /*treść przeniesiona do large*/
    position: absolute; /*bo to dziecko linku*/
    top: 0;
    left: 0;
    content: ""; /*nie zapominaj*/
    width: 100%;
    height: 100%;
    border: 1px solid gold;
    opacity: 0;
  }
  .header .nav__link:hover::before {
    /*PROBLEM bo napisałem samo &:hover i domyślnie myślałem, że skoro jest w nawiasach ::before, to będzie na niego oddziaływał, ale tak nie jest, trzeba dopisywać ::before*/
    animation: pulse 1s;
  }
  .header .hamburger {
    display: none;
  }
}
@media (min-width: 1200px) {
  .header__text p {
    font-size: 2.2rem;
  }
}/*# sourceMappingURL=main.css.map */