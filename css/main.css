@charset "UTF-8";
@keyframes pulse {
  /*zapamiętaj koniecznie ten efekt pulsowania*/
  from {
    opacity: 0.5;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(1.2);
  }
}
@keyframes rotate-right {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}
@keyframes rotate-left {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(-360deg);
  }
}
*,
*::after,
*::before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  font-family: "Raleway", sans-serif;
  font-family: "Cinzel", serif;
  background-color: #333;
  font-size: 1.6rem;
  color: #fff;
  background-color: #232323;
}

h1.company-name {
  margin-bottom: 0.5em;
  font-size: 3rem;
  font-family: "Cinzel", serif;
  color: gold;
}

.wrapper {
  margin: 0 auto;
  max-width: 1200px;
  width: 100%;
}

.section-title {
  /*z sekcji info*/
  position: relative; /*względem tego elementu będziemy pozycjonować jego dziecko, czyli ::before*/
  margin: 0 auto 2em; /*auto gwarantuje ustawienie tytułu na środku*/
  width: -moz-fit-content;
  width: fit-content; /*żeby dopasować szerokość do treści*/
  font-size: 3.2rem;
  color: gold;
  font-weight: 200;
}
.section-title::before {
  /*stąd efekt podkreślenia*/
  position: absolute;
  bottom: 0em;
  left: 0;
  width: 40px;
  height: 2px;
  background-color: #d6c78e;
  content: "";
}
.section-title span {
  font-weight: 900;
}

.header {
  /*header za pomoacą grid jest podzielony na 4 części, z dzieci zabieramy: button oraz nav za pomocą position absolute*/
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  height: 100vh; /*w ten sposób budujemy wysokość headera*/
  position: relative; /*żeby dzieci mogłby mieć absolute*/
  overflow: hidden;
}
.header__text {
  display: grid; /*tutaj mamy do czynienia z sytuacją, gdy ustawiamy sobie grid na rodzicu a dzieciom nadajemy jcc oraz aic. Powoduje to, że obszar zajęty przez text zostaje podzielony na część zajmowaną przez dzieci, czyli h1 oraz p. Treść ustawia się w centrum tych dwóch obszarów. W przypadku, gdybyśmy na rodzica, czyli na &__text dali display:flex, to rodzi nie zostałby podzielony na dwa obszary a dzieci ustawiłyby się na srodku tego jednego obszaru*/
  justify-content: center; /*centrowanie jak we flexie*/
  align-items: center;
  grid-row: 2/3;
  grid-column: 1/3;
  padding: 2em;
}
.header__text p {
  font-weight: 200;
}
.header__img {
  position: relative; /*po jego dziecko ma absolute*/
  grid-row: 1/2;
  grid-column: 1/3;
  width: 100%;
  height: 100%;
  background-image: url("../img/header_small.jpg");
  background-size: cover; /*żeby zdjęcie było rozciągnięte, coś co przypomina object-fit:cover w przypadku elementów img*/
  background-position: center;
  filter: sepia();
}
.header__shadow {
  position: absolute;
  width: 100%; /*względem rodzica, czyli &__img*, tak, aby zasłaniał cały element*/
  height: 100%;
  background-color: rgba(0, 0, 0, 0.3);
}
.header__arrow {
  display: none;
}
.header__bg-icon-one, .header__bg-icon-two {
  position: absolute; /*to ważna informacja*/
  opacity: 0.05;
  z-index: -5; /*żeby ikona była pod tekstem, nie zasłaniała go*/
}
.header__bg-icon-two {
  display: none; /*żeby jej nie widać na urządzeniach mobilnych*/
}
.header__bg-icon-one {
  bottom: 0.5em;
  right: -3em;
  height: 30%; /*tzreba dać jakiś wymiar: height lub width*/
  animation: rotate-right 55s infinite linear; /*animacja powtarzająca się w nieskończoność, linear-  czyli z jednakowa prędkością*/
}
.header .hamburger {
  /*mimo że zaimportowaliśmy ustawienia hamburgera poprzez link, to musimy go teraz ustawić na stronie*/
  position: absolute;
  top: 3em;
  left: 1em;
  transform: translateY(-50%);
  z-index: 700;
}
.header .hamburger-inner, .header .hamburger-inner::after, .header .hamburger-inner::before {
  background-color: #fff;
}
.header .nav-desktop {
  display: none;
}
.header .nav-mobile {
  position: absolute; /*top, bottom, right, left na 0, zeby rozciagnąć na cały ekran*/
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex; /*żeby wypozycjonować dzieci, tutaj, żeby zobaczyć jak wygląda cała nawigacja rozciągnięta, daj kolor tła na np. pomarańczowy i daj wysoki z-index*/
  justify-content: center;
  align-items: center;
  flex-direction: column;
  transform: translateX(-102%); /* nie 100% bo sie z boku pojawiał biały pasek*/
  transition: transform 0.3s;
  z-index: 2000;
}
.header .nav-mobile--active {
  transform: translateX(0%);
  background-color: #fff;
  z-index: 30;
}
.header .nav__link {
  position: relative;
  display: inline-block;
  margin: 0.5em;
  padding: 0.5em;
  text-decoration: none;
  font-size: 2.3rem;
  color: #191919;
  text-transform: uppercase;
  transition: color 0.3s;
  cursor: pointer;
}
.header .nav__link:hover {
  color: gold;
}

.main .cards {
  background-color: #191919;
  overflow: hidden; /*dajemy tę wartość ze względu na animację, która będzie na before do card - linijka 195, gdyby overlow nie bylo hidden, to przy małych rozdzielczościach ze względu na wartość transform: scale (1.2) mielibyśmy nieporządany efekt*/
}
.main .cards__box {
  display: grid;
  grid-template-columns: repeat(9, 1fr); /*liczba rzędów nie jest podawana,  ale jest trójka dzieci: 3 *cars__card i powstają 3 rzędy*/
  gap: 2em;
  padding: 6em;
}
.main .cards__card {
  /*są trzy karty - ta sekcja na desktopie będzie miała mniejszą wysokość, za sprawą ułożenia trzech kart obok siebie*/
  position: relative; /*wzgledniem rodzica będziemy pozycjonować before i tylko dlatego jest ta pozycja*/
  display: grid; /*ponieważ karta ma 3 dzieci: img,h3 oraz p, i nadaliśmy jej grid a nie napisaliśmy ile ma mieć row i columns, na chwilę obecną została stworzona 1 kolumna na treść i 3 wiersze na każde dziecko po jednym, nie można tutaj zastąpić: display: flex, bo elementy ułożą sieobok siebie przy zapisie justify: center*/
  justify-items: center; /*uwaga w grid nie używamy justify-content:center*/
  padding: 3em;
  text-align: center;
  border: 1px solid transparent; /*dodajemy transparent, żeby po dodaniu hovera i w hoverze wprowadzeniu zmiany na borderze,  div z klasą cards__card nie skakały - hover będzie powodował tylko zmianę koloru hovera z transparent na złoty*/
  border-radius: 8px;
  background-color: #232323;
  transition: background-color 0.3s, border 0.3s; /*zauważ przecinek w takim wyp.*/
  z-index: 5; /*ze względu na animację na ::before, żeby rozchodzące się linie nie dawały nieporządanego efektu*/
}
.main .cards__card:hover {
  background-color: #191919;
  border: 1px solid gold;
  z-index: 1;
}
.main .cards__card::before {
  /*jest dzieckiem &__card*/
  position: absolute;
  content: "";
  width: 100%;
  height: 100%; /*dając takie wartości, nie potrzebujemy pozycjonować za pomocą left, right*/
  border: 1px solid gold;
  border-radius: 8px;
  opacity: 0;
}
.main .cards__card:hover::before {
  animation: pulse 1s;
}
.main .cards__card img {
  margin-bottom: 1em;
  width: 60px;
}
.main .cards__card h3 {
  margin-bottom: 0.6em;
  text-transform: uppercase;
}
.main .cards__card--one {
  /*ta sama klasa co cards__card*/
  grid-column: 1/-1; /*jak zwykle na początku pracujemy na urządzeniach mobilnych, więc pod nie te wartości, potem na breakpointach pozmieniamy; tu pozycjonujemy na siatce gridowej rodzica!!!*/
  grid-row: 1/2;
  background-color: red;
}
.main .cards__card--two {
  grid-column: 1/-1;
  grid-row: 2/3;
  background-color: blue;
}
.main .cards__card--three {
  grid-column: 1/-1;
  grid-row: 3/4;
  background-color: violet;
}

.info {
  position: relative; /*względem tego rodzica będziemy pozycjonować kwadraciki i iksy z samego dołu sekcji*/
  display: grid;
  grid-template-areas: "title" "box" "box";
  padding: 6em 2em;
}
.info__title {
  grid-area: title; /*tutaj nie ma cudzysłowu*/
}
.info__boxes {
  grid-area: box; /*tutaj nie ma cudzysłowu*/
}
.info__box-img {
  width: 100%;
  -o-object-fit: contain;
     object-fit: contain;
  filter: sepia();
}
.info__box-title {
  margin: 0.3em 0;
  font-size: 2.6rem;
  color: #d6c78e;
  font-weight: 200;
}
.info__box-text {
  margin-bottom: 0.5em;
}
.info__box-link {
  display: block;
  margin-bottom: 2em;
  font-weight: bold;
  text-align: right; /*wyrównuje tekst do prawej*/
  color: #d6c78e;
  text-decoration: none;
  transition: color 0.3s;
}
.info__box-link:hover {
  color: #9b9165;
}
.info__bg-icon {
  display: none;
}

.plans {
  padding: 6em 2em; /*tak wpływamy w dużym stopniu na wymiar sekcji*/
  background-color: #191919;
}
.plans__box {
  margin: 1em 0;
  padding: 2em 1em;
  text-align: center;
  border: 1px solid transparent; /*ze względu na to, że na hover będziemy wywoływać akcję, w której wywołamy sobie border, gdybyśmy nie wpisali tutaj border, obraz zacząłby się trząść*/
  border-radius: 8px;
  transition: all 2s;
  background-color: #232323;
  cursor: pointer; /*taki niby element klikalny, bo w zasadzie, każdy boż powinien być w środku tagu "a"*/
}
.plans__box:hover {
  background-color: #191919;
  border: 1px solid #d6c78e;
}
.plans__item {
  padding: 1em 0;
  font-size: 1.8rem;
  color: #d6c78e;
}
.plans__item-icon {
  width: 50px;
}
.plans__item-name {
  margin-top: 0;
  margin-bottom: 1.5em;
}

.newsletter {
  padding: 8em 2em; /*zwiększając padding, zwiększamy obszar zajmowany przez sekcję i powodujemy, że ona rośnie na wysokość, czyli padding odpowiada często za rozmiar sekcji góra/ dół*/
  background-color: #A01C35;
  text-align: center;
}
.newsletter__text {
  padding: 1em;
  margin-bottom: 1em;
  font-size: 4rem;
  font-weight: 200;
}
.newsletter__input {
  margin-bottom: 1em;
  padding: 1em; /*przez co automatycznie rozrósł się cały input*/
  width: 100%;
  background-color: #fff;
  border: 1px solid transparent;
}
.newsletter__button {
  padding: 2em;
  border: 1px solid #d6c78e;
  border-radius: 8px;
  background: none;
  color: gold;
  font-weight: bold;
  transition: background-color 0.3s, color 0.3s;
}
.newsletter__button:hover {
  background-color: #d6c78e;
  color: #A01C35;
}

.gallery {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
}
.gallery__img {
  height: 300px;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover; /*obraz zostanie wypełniony, a nie zdeformowany, a nadmiarowa zawartość zostanie obcięta.*/
}
.gallery__img:nth-child(odd) {
  display: none;
}

.contact {
  padding: 6em 2em; /*standardowo, tak, jak na innych sekcjach*/
}
.contact__form {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
}
.contact__form-btn {
  grid-column: 1/3;
  grid-row: 4/5;
  padding: 1em;
  min-width: 70px;
  border: 1px solid #d6c78e;
  background: none;
  font-weight: bold;
  color: #d6c78e;
  cursor: pointer;
  transition: background-color 0.3s color 0.3s;
}
.contact__form-btn:hover, .contact__form-btn:focus {
  outline: none;
  background-color: #d6c78e;
  color: #232323;
}
.contact__form-box label {
  display: block;
  margin-bottom: 0.5em;
  font-size: 2rem;
}
.contact__form-box textarea {
  height: 70%;
  resize: vertical; /*zapobiega rozciaganiu się w szerz*/
}
.contact__form-box input,
.contact__form-box textarea {
  padding: 1em 2em;
  margin-bottom: 2em;
  width: 100%;
  color: #fff;
  background: none;
  border: 1px solid rgba(255, 255, 255, 0.1);
}
.contact__form-box input:focus,
.contact__form-box textarea:focus {
  outline: none; /*żeby pozbyć się focusa*/
  border: 1px solid #d6c78e; /*żeby był ładny efekt podświetlenia*/
}
.contact__form-box:nth-child(1) {
  grid-column: 1/-1;
  grid-row: 1/2;
}
.contact__form-box:nth-child(2) {
  grid-column: 1/-1;
  grid-row: 2/3;
}
.contact__form-box:nth-child(3) {
  grid-column: 1/-1;
  grid-row: 3/4;
}

.footer {
  padding: 3em 1em;
  border-top: 2px solid #191919;
  text-align: center;
}

@media (min-width: 576px) {
  .info {
    grid-template-areas: "title box" "title box" "title box";
    padding: 10em 2em;
  }
  .info__box {
    display: grid;
    justify-content: end; /*odnosi się do dzieci, czyli img, h3, p,p, oraz "a"*/
  }
  .info__title {
    padding: 0 1em;
  }
  .info__box-img, .info__box-text {
    max-width: 550px;
  }
  .info__bg-icon {
    display: block;
    position: absolute;
    grid-area: title; /*pozycjonowanie dzięki gridowi jeśli chodzi o obszar*/
    opacity: 0.05;
    z-index: -5;
  }
  .info__bg-icon--one {
    top: 14%; /*jest włączona position absolute na main*/
    width: 20%; /*względem szerokości rodzica*/
    animation: rotate-right 155s infinite linear;
  }
  .info__bg-icon--two {
    bottom: 10%;
    left: 10%;
    width: 40%;
    animation: rotate-left 121s infinite linear;
  }
  .info__bg-icon--three {
    top: 26%;
    left: 10%;
    width: 50%;
    animation: rotate-left 131s infinite linear;
  }
  .info__bg-icon--four {
    top: 55%;
    left: -30%;
    width: 75%;
    animation: rotate-right 80s infinite linear;
  }
}
@media (min-width: 768px) {
  .main .cards__box {
    padding: 10em 2em;
  }
  .main .cards__card--one {
    grid-column: 1/4;
    grid-row: 1/2;
    background-color: green;
  }
  .main .cards__card--two {
    grid-column: 4/7;
    grid-row: 1/2;
    background-color: rgb(128, 85, 0);
  }
  .main .cards__card--three {
    grid-column: 7/10;
    grid-row: 1/2;
    background-color: rgb(47, 0, 128);
  }
  .main .plans {
    padding: 8em 2em;
  }
  .main .plans__box {
    display: grid;
    grid-template-columns: repeat(5, 1fr); /*podział na 5 kolumn wynika z faktu, że &__box ma 5 dzieci, a celem jest, by każde dziecko pojawiło się obok siebie*/
    align-items: center;
  }
  .main .plans__item {
    margin: 0 1em;
    z-index: 2;
  }
  .main .plans__item-name {
    margin-top: 0;
    margin-bottom: 0;
  }
  .main .newsletter .wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr; /*taki zapis powoduje, że dwójka dzieci wrappera, czyli &__text oraz &__form zostana rozmieszczone w dwóch kolumnach*/
    align-items: center;
  }
  .main .newsletter__text {
    margin-bottom: 0;
  }
  .main .newsletter__form {
    display: grid;
    grid-template-columns: 3fr 1fr; /*to automatycznie układa dwójkę dzieci czyli newsletter__input oraz newsletter__button w dwóch kolumnach, w stosunku szerokości 3:1*/
    gap: 20px;
  }
  .main .newsletter__button {
    border-radius: 0;
  }
  .main .newsletter__input {
    margin-bottom: 0;
  }
  .main .gallery {
    grid-template-columns: repeat(4, 1fr);
  }
  .main .gallery__img:nth-child(odd) {
    display: block;
  }
  .main .contact__form {
    gap: 30px;
  }
  .main .contact__form-btn {
    grid-row: 3/4;
  }
  .main .contact__form-box:nth-child(1) {
    grid-column: 1/4;
    grid-row: 1/2;
  }
  .main .contact__form-box:nth-child(2) {
    grid-column: 4/7;
    grid-row: 1/2;
  }
  .main .contact__form-box:nth-child(3) {
    grid-column: 1/-1;
    grid-row: 2/3;
  }
}
@media (min-width: 992px) {
  .section-title {
    /*z sekcji info*/
    font-size: 4.8rem;
  }
  .section-title:before {
    height: 4px;
  }
  .header {
    grid-template-rows: auto repeat(2, 1fr); /*to komenda utwórz 3 rzędy, z czego  1. rzad zajmie tyle przestrzeni, ile jego treść ten fragment jest nam potrzebny w momencie, gdy umieścimy tutaj nawigację, to jest linka 57 bieżącego pliku, bez komendy auto nawigacja by się rozlała po stronie*/
  }
  .header__text {
    grid-row: 2/4;
    grid-column: 1/2;
  }
  .header__text p {
    font-size: 1.8rem;
  }
  .header__text h1.company-name {
    font-size: 6rem;
  }
  .header__img {
    grid-row: 1/4;
    grid-column: 2/3;
  }
  .header__arrow {
    display: block; /*bo na urządzenia monbilne było display: none*/
    position: absolute;
    left: 48%;
    bottom: 3em;
    padding: 2em; /*padding służy też okreslania wielkości elementu*/
    transform: translateX(-50%);
    border: 1px solid #fff;
    border-radius: 50%;
  }
  .header__arrow::before {
    /*animacja jest na ::before, żeby strzałka nie znikała*/
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    content: ""; /*nie zapominaj o tym*/
    border: 1px solid #fff;
    border-radius: 50%;
    animation: pulse 2s infinite;
  }
  .header__arrow-icon {
    width: 50px;
  }
  .header__bg-icon-one {
    /*uwaga: taki efekt delikatnej figury geometrycznej w tle uzyskaliśmy w main poprzez danie na ten element position absolute, opacity: 0.05, z-index na -5*/
    /*trzeba się dobrze przypatrzeć, ale w tle pojawia się taki kwadrat*/
    left: 6em;
    bottom: 8em;
    width: 20%;
    z-index: 40;
  }
  .header__bg-icon-two {
    display: block; /*żeby się pojawiło*/
    top: 10em;
    bottom: 35%;
    width: 10%;
    animation: rotate-left 55s infinite linear;
  }
  .header .nav {
    grid-column: 1/2;
    grid-row: 1/2;
    padding: 1em;
    border-bottom: 1px solid rgba(255, 255, 255, 0.3); /*tworzy kreskę pod nawigacją*/
  }
  .header .nav-desktop {
    display: block;
  }
  .header .nav__link {
    color: #fff;
  }
  .header .nav__link::before {
    /*treść przeniesiona do large*/
    position: absolute; /*bo to dziecko linku*/
    top: 0;
    left: 0;
    content: ""; /*nie zapominaj*/
    width: 100%;
    height: 100%;
    border: 1px solid gold;
    opacity: 0;
  }
  .header .nav__link:hover::before {
    /*PROBLEM bo napisałem samo &:hover i domyślnie myślałem, że skoro jest w nawiasach ::before, to będzie na niego oddziaływał, ale tak nie jest, trzeba dopisywać ::before*/
    animation: pulse 1s;
  }
  .header .hamburger {
    display: none;
  }
}
@media (min-width: 1200px) {
  .main .header__text p {
    font-size: 2.2rem;
  }
  .main .gallery {
    grid-template-columns: repeat(8, 1fr);
  }
}/*# sourceMappingURL=main.css.map */